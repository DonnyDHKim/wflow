#***********************************************************************************************
# CONFIGURATION FILE BELONGING TO SPHY. MODEL CHANGES CAN BE DONE IN THIS FILE. THIS FILE
# CAN BE USED TO CHANGE MODEL INPUT, SET PARAMETERS, MODEL OUTPUT, AND TURN ON/OFF MODULES
#
# THE SPATIAL PROCESSES IN HYDROLOGY (SPHY) MODEL IS DEVELOPED AND OWNED BY FUTUREWATER.
# AUTHOR: W. Terink
# DATE LATEST CHANGE: 16-06-2015
# VERSION 2.1
#***********************************************************************************************

[inputmapstacks]
Prec = /inmaps/prec/prec
Tair = /inmaps/tavg/tavg
Tmax =/inmaps/tmax/tmax
Tmin =/inmaps/tmin/tmin

[framework]
outputformat	= 1
debug		= 0
#netcdfinput		= inmaps\forcing.nc
#netcdfoutput		= wflow2fews.nc
#netcdfstatesinput	= instates.nc
#netcdfstatesoutput	= states.nc
#netcdfstaticinput	= staticmaps.nc
#netcdfstaticoutput	= outsum.nc
#netcdf_format			= NETCDF4
netcdf_format			= NETCDF3_CLASSIC
EPSG				= EPSG:7442
netcdf_zlib			= False
#netcdfwritebuffer		= 96
netcdf_least_significant_digit	= None

[run]
# either a runinfo file or a start and end-time are required
#runinfo=runinfo.xml
starttime= 1958-01-01 00:00:00 GMT
endtime= 1958-01-10 00:00:00 GMT
#starttime = None
#endtime= None
runinfo = None
# required, base timestep of the model
timestepsecs = 86400
#start model with cold state
reinit=0

[layout]
# if set to zero the cell-size is given in lat/long (the default)
sizeinmetres = 1

#Parameters either from a map or tbl file
[modelparameters]
# SOIL
#Rootzone depth [mm]
RootDepthFlat 	= intbl/RootDepthFlat.tbl,tbl,800,1,staticmaps/catchments.map
# Subsoil depth [mm]
SubDepthFlat 	= intbl/SubDepthFlat.tbl,tbl,3000,1,staticmaps/catchments.map
# Maximum allowed capillary rise [mm/day]
CapRiseMax 		= intbl/CapRiseMax.tbl,tbl,8.5,1,staticmaps/catchments.map

# GROUNDWATER
# Add these if grounwater module is not used
# Seepage [mm/day]
#SeePage			= staticmaps/seepage.map,staticmap,0.0,0
# Average groundwater level through the year [m]
#GWL_base		= staticmaps/gwl_base.map,staticmap,0.0,0
# Add these if groundwater module is used
# Groundwater depth [mm]
GwDepth			= intbl/GwDepth.tbl,tbl,1000,1,staticmaps/catchments.map
# Saturated water content groundwater [mm]
GwSat 			= intbl/GwSat.tbl,tbl,1500,1,staticmaps/catchments.map
# Groundwater recharge delay time [day]
deltaGw 		= intbl/GwDepth.tbl,tbl,100,1,staticmaps/catchments.map
# Baseflow threshold [mm]
BaseThresh 		= intbl/BaseThresh.tbl,tbl,0,1,staticmaps/catchments.map
# AlphaGw ranges between 0.1-1.0
alphaGw 		= intbl/alphaGw.tbl,tbl,0.25,1,staticmaps/catchments.map
# Specific aquifer yield [m/m]
YieldGw			= intbl/YieldGw.tbl,tbl,0.05,1,staticmaps/catchments.map

#LANDUSE / VEGETATION
#Add these if dynamic vegetation module is not used and if kcstatic flag = 1
# Crop coefficients [-]
Kc			= intbl/kc.tbl,tbl,1.0,1,staticmaps/catchments.map
#Add these if dynamic vegetation module is not used and if kcstatic flag = 0
# Crop coefficients timeseries [-]
#Kc	= inmaps/kc,timeseries,1.0,1
#Add these if dynamic vegetation module is used
# NDVI
#NDVI		= inmaps/ndvi,timeseries,0.0,1 
#NDVImax	= intbl/NDVImax.tbl,tbl,0.8,1,staticmaps/catchments.map
#NDVImin	= intbl/NDVImin.tbl,tbl,0.2,1,staticmaps/catchments.map
#NDVIbase	= intbl/NDVIbase.tbl,tbl,0.1,1,staticmaps/catchments.map
# Maximum crop factor [-]
#KCmax		= intbl/KCmax.tbl,tbl,1.2,1,staticmaps/catchments.map
# Minimum crop factor [-]
#KCmin		= intbl/KCmin.tbl,tbl,0.5,1,staticmaps/catchments.map
# Maximum Leaf Area Index
#LAImax		= intbl/LAImax.tbl,tbl,6,1,staticmaps/catchments.map
# Maximum fraction of absorbed photosynthetically active radiation
#FPARmax	= intbl/FPARmax.tbl,tbl,0.95,1,staticmaps/catchments.map
# Minimum fraction of absorbed photosynthetically active radiation
#FPARmin	= intbl/FPARmin.tbl,tbl,0.001,1,staticmaps/catchments.map

# GLACIER
#Add these if glacier module is used
# Clean ice GlacFrac [-]
GlacFracCI		= staticmaps/glacier_clean.map,staticmap,0.0,0
# Debris GlacFrac [-]
GlacFracDB		= staticmaps/glacier_debris.map,staticmap,0.0,0
# Glacier (clean ice) degree day factor [mm/degree.day]
DDFG			= intbl/DDFG.tbl,tbl,6.1,1,staticmaps/catchments.map
# Glacier debris degree day factor [mm/degree.day]
DDFDG			= intbl/DDFDG.tbl,tbl,2.9,1,staticmaps/catchments.map
# Fraction of glacier melt to become runoff [-]
GlacF			= intbl/GlacF.tbl,tbl,0.55,1,staticmaps/catchments.map

# SNOW
#Add these if snow module is used
# Critical temperature for precipitation to fall as snow [degree Celsius]
Tcrit 			= intbl/Tcrit.tbl,tbl,-0.8,1,staticmaps/catchments.map
# Snow pack storage capacity [mm/mm]
SnowSC			= intbl/SnowSC.tbl,tbl,0.5,1,staticmaps/catchments.map
# Snow degree day factor [mm/degree.day]
DDFS			= intbl/DDFS.tbl,tbl,4.3,1,staticmaps/catchments.map

# EVAPOTRANSPIRATION
#Add these if evapotranspiration flag = 1
# Reference evapotranspiration timeseries
#ETref			= inmaps/ETref,timeseries,0.4,1
#Add these if evapotranspiration flag = 0
#Latitude zones
Lat           	= staticmaps/Latitude.map,staticmap,0.0,0
# Solar constant [MJ/m2/min]
Gsc 			= intbl/Gsc.tbl,tbl,0.0820,1,staticmaps/catchments.map

# ROUTING
#Add this if routing, reservoir or lake modules are used
# Recession routing coefficient [-]
kx				= intbl/kx.tbl,tbl,5,1,staticmaps/catchments.map

# LAKE
#Add these if lake module is used
# Map with lake id numbers
#LakeID = staticmaps/LakeId.map,staticmap,0.0,0
# Use measured lake levels to calculate the outflow (boolean map)
#UpdateLakeLevel	= staticmaps/updatelakelevel.map,staticmap,0.0,0
# Lake water level timeseraies [m]
#LLevel		= inmaps/level,timeseries,0.0,1

# RESERVOIR
#Add these if reservoir module is used
# Map with reservoir id numbers
#ResID = staticmaps/ResId.map,staticmap,0.0,0



# Model parameters and settings
[model]
modeltype= wflow_sphy

#**********************************************************************************************
# Modules and options to turn on/off for the simulation
#**********************************************************************************************
# Glacier melt processes module. This automatically turns on the snow module as well.
GlacFLAG	= 1
# Snow module. If the glacier melt processes module is turned on, then this is also turned on
# automatically. If the glacier melt processes module is turned off, then you may turn this on
# if you want to incorporate snow melt and accumulation.
SnowFLAG	= 1
# Routing module. If streamflow routing should be included, then this should be turned on. If
# this is turned on, then the reservoir module should be switched off.
RoutFLAG	= 1
# Lakes module. If lakes are located in your basin, and the Q(h)-relations are known,
# then this can be turned on to implement a more advanced routing scheme.
LakeFLAG    = 0
# Reservoirs module. This module can be used to model reservoir inflow, outflow, and storage. A
# simple or advanced reservoir operation schedule can be selected for each individual reservoir. 
# If this module is turned on, then the routing module should be switched off.
ResFLAG		= 0
# Dynamic vegetation module. This module allows to vary the crop factor (Kc) over the year. This
# can be done by using ndvi values, or by inserting a user defined kc time-series. If this
# module is not used, then the Kc will be constant for each crop.
DynVegFLAG	= 0
# Groundwater module. This distincs between the use of a groundwater reservoir or the use of a
# seepage flux (bottom boundary condition). If the groundwater module is chosen, then percolation
# will occur from the second to third (groundwater) storage, finally resulting in a baseflow flux.
# Otherwise a seepage flux leaves or enters the second storage volume, which eventually results
# in a sub drainage flux.
GroundFLAG	= 1

# Other possible flags depending on module selection
# FLAG FOR TIME-SERIES CALCULATION AND REPORTING OF FLUXES IN MM FOR THE UPSTREAM AREA (1=Y, 0=N).
# This is mainly interesting if routing is used as well, to check the mm of water generated from the
# upstream areas.
mm_rep_FLAG	= 0
# SEEPSTATIC. Flag that determines the use of a constant seepage value throughout the entire simulation
# period, or the use of a dynamic seepage map series. Use 1 for static, and 0 for dynamic. If dynamic 
# groundwater module is used, then this can be left empty.
SeepStatic		= 
# KCSTATIC. Flag that determines the use of a constant kc throughout the entire simulation period,
# or the use of a dynamic kc map series. Use 1 for static, and 0 for dynamic. If dynamic vegetation
# module is used, then this can be left empty.
KCstatic 		= 1
# ETREF FLAG. If a map time-series exists of the reference evapotranspiration (etref), then this 
# flag can be turned on (1=Y, 0=N). If this is not used, then the etref will be calculated using
# Hargreaves.
ETREF_FLAG		= 0
# FLAGS TO SELECT VARIABLES TO BE ROUTED. For routing, either the routing, lake or reservoir modules 
# are turned on. For snow and glacier routing, the corresponding modules need to be set to 1.
#Snow routing
SnowRA_FLAG = 1
# Rain routing
RainRA_FLAG = 1
# Glacier routing
GlacRA_FLAG = 0
# Baseflow routing
BaseRA_FLAG = 1


#**********************************************************************************************
# Model maps
#**********************************************************************************************
# GENERAL
dem = staticmaps/dem.map
slope = staticmaps/slope.map
locations = staticmaps/outlets.map
landuse	= staticmaps/LU.map
flowdir = staticmaps/ldd.map

# SOIL
# Field capacity rootzone [mm/mm]
RootFieldMap = staticmaps/WCpF2_Topsoil.map
# Saturated water content rootzone [mm/mm]
RootSatMap = staticmaps/WCsat_Topsoil.map
# Permanent wilting point rootzone [mm/mm]
RootDryMap = staticmaps/WCpF4.2_Topsoil.map
# Wilting point rootzone [mm/mm]
RootWiltMap = staticmaps/WCpF3_Topsoil.map
# Saturated hydraulic conductivity rootzone [mm/day]
RootKsat = staticmaps/ksat_topsoil.map
# Field capacity subsoil [mm/mm]
SubFieldMap = staticmaps/WCpF2_Subsoil.map
# Saturated water content subsoil [mm/mm]
SubSatMap = staticmaps/WCsat_Subsoil.map
# Saturated hydraulic conductivity subsoil [mm/mm]
SubKsat = staticmaps/ksat_subsoil.map



[outputmaps]
# Water balance [mm]
self.waterbalance = wbal
# Groundwater level in [m] below surface
#self.GWL = GWL
# Precipitation [mm]
#self.Prec = Prec
# Precipitation, corrected with glacier fraction [mm]
#self.PrecipF = PrecF
# Effective precipitation, corrected with glacier fraction [mm]
#self.PrecipEF = PrecEF
# Interception, corrected with glacier fraction [mm]
#self.IntF = IntF
# Rain [mm]
#self.Rain = Rain
# Rain, corrected with glacier fraction [mm]
#self.RainF = RainF
#ETPot [mm]
#self.ETpot = ETpot
#ETPot, corrected with glacier fraction [mm]
#self.ETpotF = ETpotF
# ETAct [mm]
#self.ETact = ETact
# ETAct, corrected with glacier fraction [mm]
#self.ActETact = ETactF
# Snowfall [mm]
#self.Snow = Snow
# Snowfall, corrected with glacier fraction [mm]
#self.SnowF = SnowF
# Snowmelt [mm]
self.ActSnowMelt = SMel
# Snowmelt, corrected with glacier fraction [mm]
#self.ActSnowMeltF = SMelF
# Glacier melt [mm]
#self.GlacMelt = GMel
# Glacier melt, corrected with glacier fraction [mm]
#self.GlacMeltF = GMelF
# Rootzone runoff, corrected with glacier fraction [mm]
#self.RootR = RootRF
# Rootzone drainage, corrected with glacier fraction [mm]
#self.RootD = RootDF
# Rootzone percolation, corrected with glacier fraction [mm]
#self.rootpercF = RootPF
# Subzone drainage, corrected with glacier fraction [mm]
#self.SubDrain = SubDF
# Subzone drainge, corrected with glacier fraction [mm]
#self.ActSubPerc = SubPF
# Capillary rise, corrected with glacier fraction [mm]
#self.CapRiseF = CapRF
# Seepage, corrected with glacier fraction [mm]
#self.SeePage = SeepF
# Glacier percolation, corrected with glacier fraction [mm]
#self.GlacPerc = GPercF
# Groundwater recharge, corrected with glacier fraction [mm]
#self.GwRecharge = GwRechF
#Rain runoff, corrected with glacier fraction [mm]
self.RainR = RainRF
# Snow runoff, corrected with glacier fraction [mm]
self.SnowR = SnowRF
# Glacier runoff, corrected with glacier fraction [mm]
#self.GlacR = GlacR
# Baseflow runoff, corrected with glacier fraction [mm]
self.BaseR = BaseR
#Total runoff of all fractions [mm]
self.TotRF = TotRF
# Routed rain runoff [m3/s]
#self.RainRA = RainRA
# Routed snow runoff [m3/s]
#self.SnowRA = SnowRA
# Routed glacier runoff [m3/s]
#self.GlacRA = GlacRA
# Routed baseflow runoff [m3/s]
#self.BaseRA = BaseRA
# Total routed runoff [m3/s]
self.Q = QallRA



[outputcsv_0]
#samplemap = staticmaps/outlets.map
#self.QRAold=Qall.csv
#self.SnowRAold=QSnow.csv
#self.GlacRAold=QGlac.csv
#self.RainRAold=Qrain.csv
#self.BaseRAold=Qbase.csv

[outputtss_0]
#Save and average these for subcatchments
samplemap = staticmaps/catchments.map
function = average
self.PrecipF=PrecSubBasinTSS
self.ActETact = ETaSubBasinTSS
#self.GlacMeltF = GMeltSubBasinTSS
#etc complete list in outmaps
