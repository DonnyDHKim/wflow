
[framework]
outputformat = 1

# Model parameters and settings
[model]
#fewsrun=1
#reinit = 1
AnnualDischarge=2290
# Alpha for wiver-width estimation 5 for mountain stream 60 for the river rhine
Alpha=120
ModelSnow=1
ScalarInput=0
InputSeries=1
InterpolationMethod=inv
Tslice=1
UpdMaxDist=300000.0
P_style = 1
L_IRURFR = 0
L_URFR = 0
L_FR = 0
maxTransitTime = 9
DistForcing = 3
maxGaugeId = 10
spinUp_time = 5
NSEbreak = 0

#intbl = intbl_tanja

#W=wetland(0) H=hillslope(1)  P=plateau(2)  WD = drained wetland(3) 
classes = ['W','H','P']
timestepsecs = 3600

#selection of reservoir configuration - 'None' means reservoir should not be modelled for this class
selectSi = interception_overflow2, interception_overflow2, interception_overflow2
selectSu = unsatZone_LP_beta, unsatZone_LP_beta, unsatZone_forAgri_hourlyEp
selectSa = None, None, agriZone_hourlyEp_Sa_beta_frostSamax
selectSf = fastRunoff_lag2, fastRunoff_lag2, fastRunoff_lag2
selectSfa = None, None, fastRunoff_lag_agriDitch
selectSw = snow_rain_hourlyEp, snow_rain_hourlyEp, snow_rain_hourlyEp

# selection of routing routine (for combined fluxes of different classes, so only one!)
#selectRout = routingQf_combined	#  niet gebruiken, zit nog een bug in
selectRout = routingQf_Qs_grid

# selection of Ss (lumped over entire catchment, so only one!)
# selectSs = <some other reservoir than groundWaterCombined3>

#wflow maps with percentages
wflow_percent_0 = staticmaps/wflow_percentW.map
wflow_percent_1 = staticmaps/wflow_percentH.map
wflow_percent_2 = staticmaps/wflow_percentP.map

#constant model parameters - some are catchment dependent 
Ks = [0.0004, 0.0004,0.0004]
lamda = 2.45e6
lamdaS = 2.83e6
Cp = 1004
rhoA = 1.205
rhoW = 1000
gamma = 0.0637
JC_Topt = 301


#parameters for fluxes and storages
D = [0, 0.17, 0.31]
Tf = [1, 2, 2]
Tfa = [0, 0, 1]

[run]
runinfofile = inmaps/runinfo.xml
#reinit = 1

[layout]
# if set to zero the cell-size is given in lat/long (the default)
sizeinmetres = 1

[outputmaps]

self.Ss = Ss
self.Si[0] = Si
# List all timeseries in tss format to save in this section. Timeseries are
# produced per subcatchment. 

[outputtss_0]
#samplemap=staticmaps/wflow_mgauges.map
samplemap=staticmaps/wflow_subcatch.map
#mgauge is thiessen polygonen kaart
#states
# zie volgorde ['W','H','P']
# unsaturated mm
self.Su[0] = SuW.tss
self.Su[1] = SuH.tss
self.Su[2] = SuP.tss
#hortonian / agriculture mm
self.Sa[2] = SaP.tss
# snow depth (SWE) mm
self.Sw[2] = SwP.tss

#fluxen
self.Precipitation = Prec.tss
self.PotEvaporation = epot.tss
# interceptie verdamping mm/hr
self.Ei_[0] = EiW.tss
self.Ei_[1] = EiH.tss
self.Ei_[2] = EiP.tss
# transpiratie in mm/hr
self.Eu_[0] = EuW.tss
self.Eu_[1] = EuH.tss
self.Eu_[2] = EuP.tss
# fast runoff mm/hr
self.Qf_[0] = QfW.tss
self.Qf_[1] = QfH.tss
self.Qf_[2] = QfP.tss
# fast runoff from agri res mm/hr
self.Qfa_[2] = QfaP.tss
# Qs is groundwater in mm/hr
self.Qs = Qs.tss

self.sumax[2] = sumaxP.tss
self.sumax[1] = sumaxH.tss

[outputtss_1]
samplemap = staticmaps/wflow_gauges.map
#fluxen
#QLagTot afvoer in m3/s
self.QLagTot = runLag.tss


[modelparameters]
# Format:
# name=stack,type,default,verbose[lookupmap_1],[lookupmap_2],lookupmap_n]
# example:
# RootingDepth=monthlyclim/ROOT,monthyclim,100,1

# - name - Name of the parameter (internal variable)
# - stack - Name of the mapstack (representation on disk or in mem) relative to case
# - type - Type of parameter (default = static)
# - default - Default value if map/tbl is not present
# - set to 1 to be verbose if a map is missing
# - lookupmap - maps to be used in the lookuptable in the case the type is statictbl

#Possible types are::
# - staticmap: Read at startup from map
# - statictbl: Read at startup from tbl
# - tbl: Read each timestep from tbl and at startup
# - timeseries: read map for each timestep
# - monthlyclim: read a map corresponding to the current month (12 maps in total)
# - dailyclim: read a map corresponding to the current day of the year
# - hourlyclim: read a map corresponding to the current hour of the day (24 in total) (not implemented yet)
# - tss: read a tss file and link to lookupmap (only one allowed) a map using timeinputscalar

#Precipitation=intss/1_P.tss,tss,0.0,1,staticmaps/wflow_mgauges.map
#Temperature=intss/1_T.tss,tss,10.5,1,staticmaps/wflow_mgauges.map
#PotEvaporation=intss/1_PET.tss,tss,0.0,1,staticmaps/wflow_mgauges.map

Precipitation=inmaps/P,timeseries,0.0,1
Temperature=inmaps/TEMP,timeseries,10.5,1
#PotEvaporation=inmaps/PET,timeseries,0.0,1
EpDay = inmaps/PET,timeseries,0.0,1
EpDaySnow = inmaps/PET,timeseries,0.0,1

[summary]
self.sumax[1] = sumaxH.map